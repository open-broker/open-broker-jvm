plugins {
    id "org.jetbrains.kotlin.jvm" version "1.3.31"
    id "maven-publish"
}

group = 'org.openbroker'
version = '1.0-SNAPSHOT'
description = 'Library for Open Broker'

wrapper.gradleVersion = '5.4.1'

ext {
    kotlinLanguageVersion = '1.3'
    jdkVersion = JavaVersion.VERSION_1_8

    defaultEncoding = 'UTF-8'

    ver = [
        'kotlin'     : '1.3.31',
        'jackson'    : '2.9.9',
        'junit'      : '5.4.2',
        'cloudEvents': 'b8b9c6fef3',
    ]

    servicePackage = 'org.openbroker'
}

sourceCompatibility = jdkVersion
targetCompatibility = jdkVersion

repositories {
    maven {
        url "https://jitpack.io"
        content {
            includeGroupByRegex 'com\\.(github|gitlab|gitee).*'
        }
    }
    jcenter()
    mavenCentral()
}

dependencies {

    implementation(
        platform("org.jetbrains.kotlin:kotlin-bom:$ver.kotlin"),
        platform("com.fasterxml.jackson:jackson-bom:$ver.jackson"),
        "org.jetbrains.kotlin:kotlin-stdlib-jdk8",
        "com.fasterxml.jackson.core:jackson-core",
        "com.fasterxml.jackson.module:jackson-module-kotlin",
        "com.fasterxml.jackson.datatype:jackson-datatype-jsr310",
        "com.github.open-broker:cloud-events-jvm:$ver.cloudEvents",
    )

    testImplementation(
        platform("org.junit:junit-bom:$ver.junit"),
        "org.junit.jupiter:junit-jupiter-api",
    )

    testRuntime(
        "org.junit.jupiter:junit-jupiter-engine",
    )
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        javaParameters = true
        jvmTarget = jdkVersion
        freeCompilerArgs += ['-progressive']
        languageVersion = kotlinLanguageVersion
        apiVersion = kotlinLanguageVersion
    }
}

tasks.withType(JavaCompile).all {
    options.encoding = defaultEncoding
    options.compilerArgs = ['-parameters', '-Xlint:unchecked']
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
        }
    }
}

test {

    useJUnitPlatform()

    reports.html.enabled false

    include servicePackage.replace('.', '/') + '/**/*Test.*'

    testLogging {
        events 'skipped', 'failed'
        exceptionFormat = 'full'

        debug {
            events "started", "passed", "skipped", "failed"
        }

        info {
            events "passed", "skipped", "failed"
        }
    }
}
